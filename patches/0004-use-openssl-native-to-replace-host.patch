From ab9cbcb450d468d79427f9044ff4f3722df83e2a Mon Sep 17 00:00:00 2001
From: KunYi Chen <kunyi.chen@gmail.com>
Date: Thu, 17 Nov 2022 17:47:15 +0800
Subject: [PATCH 4/5] use openssl-native to replace host

to follow upstream of yocto project method
---
 meta-ma35d1/recipes-bsp/tf-a/files/ssl.patch  | 61 +++++++++++++++++++
 .../recipes-bsp/tf-a/tf-a-ma35d1_2.3.bb       | 52 +++++++++++++---
 2 files changed, 105 insertions(+), 8 deletions(-)
 create mode 100644 meta-ma35d1/recipes-bsp/tf-a/files/ssl.patch

diff --git a/meta-ma35d1/recipes-bsp/tf-a/files/ssl.patch b/meta-ma35d1/recipes-bsp/tf-a/files/ssl.patch
new file mode 100644
index 0000000..6b6eb6b
--- /dev/null
+++ b/meta-ma35d1/recipes-bsp/tf-a/files/ssl.patch
@@ -0,0 +1,61 @@
+From 0f6d90dd30bb757ea105697bfae7f9f354ad2f5b Mon Sep 17 00:00:00 2001
+From: Kas User <kas@example.com>
+Date: Thu, 17 Nov 2022 05:43:58 +0000
+Subject: [PATCH] fiptool: respect OPENSSL_DIR
+
+fiptool links to libcrypto, so as with the other tools it should respect
+OPENSSL_DIR for include/library paths.
+
+Upstream-Status: Submitted
+Signed-off-by: Ross Burton <ross.burton@arm.com>
+---
+ Makefile               | 2 +-
+ tools/fiptool/Makefile | 5 +++--
+ 2 files changed, 4 insertions(+), 3 deletions(-)
+
+diff --git a/Makefile b/Makefile
+index becbf0341..5762303bb 100644
+--- a/Makefile
++++ b/Makefile
+@@ -1238,7 +1238,7 @@ fwu_fip: ${BUILD_PLAT}/${FWU_FIP_NAME}
+ 
+ .PHONY: ${FIPTOOL}
+ ${FIPTOOL}:
+-	${Q}${MAKE} CPPFLAGS="-DVERSION='\"${VERSION_STRING}\"'" --no-print-directory -C ${FIPTOOLPATH}
++	${Q}${MAKE} CPPFLAGS="-DVERSION='\"${VERSION_STRING}\"'" OPENSSL_DIR=${OPENSSL_DIR} --no-print-directory -C ${FIPTOOLPATH}
+ 
+ sptool: ${SPTOOL}
+ .PHONY: ${SPTOOL}
+diff --git a/tools/fiptool/Makefile b/tools/fiptool/Makefile
+index ef3501432..4363caf29 100644
+--- a/tools/fiptool/Makefile
++++ b/tools/fiptool/Makefile
+@@ -11,6 +11,7 @@ include ${MAKE_HELPERS_DIRECTORY}build_env.mk
+ PROJECT := fiptool${BIN_EXT}
+ OBJECTS := fiptool.o tbbr_config.o
+ V ?= 0
++OPENSSL_DIR := /usr
+ 
+ override CPPFLAGS += -D_GNU_SOURCE -D_XOPEN_SOURCE=700
+ HOSTCCFLAGS := -Wall -Werror -pedantic -std=c99
+@@ -19,7 +20,7 @@ ifeq (${DEBUG},1)
+ else
+   HOSTCCFLAGS += -O2
+ endif
+-LDLIBS := -lcrypto
++LDLIBS := -L${OPENSSL_DIR}/lib -lcrypto
+ 
+ ifeq (${V},0)
+   Q := @
+@@ -27,7 +28,7 @@ else
+   Q :=
+ endif
+ 
+-INCLUDE_PATHS := -I../../include/tools_share
++INCLUDE_PATHS := -I../../include/tools_share -I${OPENSSL_DIR}/include
+ 
+ HOSTCC ?= gcc
+ 
+-- 
+2.30.2
+
diff --git a/meta-ma35d1/recipes-bsp/tf-a/tf-a-ma35d1_2.3.bb b/meta-ma35d1/recipes-bsp/tf-a/tf-a-ma35d1_2.3.bb
index 57cde3c..9cf87c2 100644
--- a/meta-ma35d1/recipes-bsp/tf-a/tf-a-ma35d1_2.3.bb
+++ b/meta-ma35d1/recipes-bsp/tf-a/tf-a-ma35d1_2.3.bb
@@ -6,13 +6,15 @@ LICENSE = "BSD-3-Clause"
 LIC_FILES_CHKSUM = "file://license.rst;md5=1dd070c98a281d18d9eefd938729b031"
 
 SRC_URI = "git://github.com/OpenNuvoton/MA35D1_arm-trusted-firmware-v2.3.git;branch=master;protocol=https"
+SRC_URI += "file://ssl.patch"
+
 SRCREV = "${TFA_SRCREV}"
 
 TF_VERSION = "2.3"
 PV = "${TF_VERSION}.r1"
 
 S = "${WORKDIR}/git"
-#B = "${WORKDIR}/build"
+B = "${WORKDIR}/build"
 
 COMPATIBLE_MACHINE = "(ma35d1)"
 
@@ -22,7 +24,7 @@ FILESEXTRAPATHS_prepend := "${THISDIR}/tf-a-ma35d1:"
 
 inherit deploy
 
-DEPENDS += "dtc-native"
+DEPENDS += "dtc-native openssl-native"
 
 SUMMARY = "Trusted Firmware-A for ma35d1"
 LICENSE = "BSD-3-Clause"
@@ -36,11 +38,45 @@ LDFLAGS[unexport] = "1"
 AS[unexport] = "1"
 LD[unexport] = "1"
 
+# CC and LD introduce arguments which conflict with those otherwise provided by
+# this recipe. The heads of these variables excluding those arguments
+# are therefore used instead.
+def remove_options_tail (in_string):
+    from itertools import takewhile
+    return ' '.join(takewhile(lambda x: not x.startswith('-'), in_string.split(' ')))
+
+EXTRA_OEMAKE += "LD=${@remove_options_tail(d.getVar('LD'))}"
+
+EXTRA_OEMAKE += "CC=${@remove_options_tail(d.getVar('CC'))}"
+
+# Verbose builds, no -Werror
+EXTRA_OEMAKE += "V=1 E=0"
+
+# Add platform parameter
+EXTRA_OEMAKE += "BUILD_BASE=${B} PLAT=${TFA_PLATFORM}"
+
+# Use the correct native compiler
+EXTRA_OEMAKE += "HOSTCC='${BUILD_CC}'"
+
+# Runtime variables
+EXTRA_OEMAKE += "RUNTIME_SYSROOT=${STAGING_DIR_HOST}"
+
+BUILD_DIR = "${B}/${TFA_PLATFORM}"
+BUILD_DIR .= "${@'/${TFA_BOARD}' if d.getVar('TFA_BOARD') else ''}"
+BUILD_DIR .= "/${@'debug' if d.getVar("TFA_DEBUG") == '1' else 'release'}"
+
+EXTRA_OEMAKE += "OPENSSL_DIR=${STAGING_DIR_NATIVE}${prefix_native}"
+
 # Configure ma35d1 make settings
 PLATFORM = "${TFA_PLATFORM}"
 export CROSS_COMPILE="${TARGET_PREFIX}"
 export ARCH="arm64"
 do_compile() {
+    # This is still needed to have the native tools executing properly by
+    # setting the RPATH
+    sed -i '/^LDLIBS/ s,$, \$\{BUILD_LDFLAGS},' ${S}/tools/fiptool/Makefile
+    sed -i '/^INCLUDE_PATHS/ s,$, \$\{BUILD_CFLAGS},' ${S}/tools/fiptool/Makefile
+    sed -i '/^LIB/ s,$, \$\{BUILD_LDFLAGS},' ${S}/tools/cert_create/Makefile
 
     TFA_OPT=" NEED_BL31=yes NEED_BL33=yes"
     if [ "${TFA_LOAD_M4}" = "yes" ]; then
@@ -67,7 +103,7 @@ do_compile() {
                 MA35D1_DRAM_SIZE=0x07800000 \
                 MA35D1_DDR_MAX_SIZE=0x8000000 \
                 MA35D1_DRAM_S_BASE=0x87800000 \
-                MA35D1_BL32_BASE=0x87800000-C ${S} fiptool
+                MA35D1_BL32_BASE=0x87800000 -C ${S} fiptool
 	elif echo ${TFA_DTB} | grep -q "512"; then
             oe_runmake PLAT=${PLATFORM} ${TFA_OPT} \
                 MA35D1_DRAM_SIZE=0x1F800000 \
@@ -83,7 +119,7 @@ do_compile() {
                 MA35D1_DRAM_SIZE=0x1F800000 \
                 MA35D1_DDR_MAX_SIZE=0x20000000 \
                 MA35D1_DRAM_S_BASE=0x9F800000 \
-                MA35D1_BL32_BASE=0x9F800000-C ${S} fiptool
+                MA35D1_BL32_BASE=0x9F800000 -C ${S} fiptool
 	elif echo ${TFA_DTB} | grep -q "1g"; then
             oe_runmake PLAT=${PLATFORM} ${TFA_OPT} \
                 MA35D1_DRAM_SIZE=0x3F800000 \
@@ -99,7 +135,7 @@ do_compile() {
                 MA35D1_DRAM_SIZE=0x3F800000 \
                 MA35D1_DDR_MAX_SIZE=0x40000000 \
                 MA35D1_DRAM_S_BASE=0xBF800000 \
-                MA35D1_BL32_BASE=0xBF800000-C ${S} fiptool
+                MA35D1_BL32_BASE=0xBF800000 -C ${S} fiptool
 	fi
     else
        oe_runmake PLAT=${PLATFORM} ${TFA_OPT} -C ${S} realclean
@@ -109,9 +145,9 @@ do_compile() {
 }
 
 do_deploy() {
-    install -Dm 0644 ${S}/build/${PLATFORM}/release/bl2.bin ${DEPLOYDIR}/${BOOT_TOOLS}/bl2-${PLATFORM}.bin
-    install -Dm 0644 ${S}/build/${PLATFORM}/release/fdts/${TFA_DTB}.dtb ${DEPLOYDIR}/${BOOT_TOOLS}/bl2-${PLATFORM}.dtb
-    install -Dm 0644 ${S}/build/${PLATFORM}/release/bl31.bin ${DEPLOYDIR}/${BOOT_TOOLS}/bl31-${PLATFORM}.bin
+    install -Dm 0644 ${B}/${PLATFORM}/release/bl2.bin ${DEPLOYDIR}/${BOOT_TOOLS}/bl2-${PLATFORM}.bin
+    install -Dm 0644 ${B}/${PLATFORM}/release/fdts/${TFA_DTB}.dtb ${DEPLOYDIR}/${BOOT_TOOLS}/bl2-${PLATFORM}.dtb
+    install -Dm 0644 ${B}/${PLATFORM}/release/bl31.bin ${DEPLOYDIR}/${BOOT_TOOLS}/bl31-${PLATFORM}.bin
     install -Dm 755 ${S}/tools/fiptool/fiptool  ${DEPLOYDIR}/${BOOT_TOOLS}/fiptool
 }
 addtask deploy after do_compile
-- 
2.38.1

